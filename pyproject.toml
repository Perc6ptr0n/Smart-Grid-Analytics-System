[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "smart-grid-optimizer"
version = "1.0.0"
description = "AI-powered smart grid load balancing and anomaly detection system"
readme = "README.md"
authors = [
    {name = "Laios Ioannis", email = "johnnilaios@gmail.com"},
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Monitoring",
    "Topic :: Utilities",
]
keywords = [
    "smart-grid", "machine-learning", "energy", "forecasting",
    "anomaly-detection", "time-series", "gpu-acceleration", 
    "dashboard", "monitoring", "ai", "catboost", "pytorch"
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=2.0.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0", 
    "scikit-learn>=1.3.0,<2.0.0",
    "scipy>=1.10.0,<2.0.0",
    "catboost>=1.2.0,<2.0.0",
    "lightgbm>=4.0.0,<5.0.0",
    "xgboost>=1.7.0,<2.0.0",
    "torch>=2.0.0,<3.0.0",
    "torchvision>=0.15.0,<1.0.0",
    "streamlit>=1.28.0,<2.0.0",
    "plotly>=5.17.0,<6.0.0",
    "matplotlib>=3.7.0,<4.0.0",
    "seaborn>=0.12.0,<1.0.0",
    "jsonschema>=4.17.0,<5.0.0",
    "statsmodels>=0.14.0,<1.0.0",
    "joblib>=1.3.0,<2.0.0",
    "psutil>=5.9.0,<6.0.0",
    "schedule>=1.2.0,<2.0.0",
    "tqdm>=4.65.0,<5.0.0",
    "pyarrow>=14.0.0,<15.0.0",
    "openpyxl>=3.1.0,<4.0.0",
    "numba>=0.58.0,<1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0", 
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "ruff>=0.1.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
gpu = [
    "cupy-cuda11x>=12.0.0",
    "nvidia-ml-py>=12.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/smart-grid-optimizer"
Documentation = "https://github.com/your-username/smart-grid-optimizer#readme"
Repository = "https://github.com/your-username/smart-grid-optimizer"
"Bug Tracker" = "https://github.com/your-username/smart-grid-optimizer/issues"
Changelog = "https://github.com/your-username/smart-grid-optimizer/blob/main/CHANGELOG.md"

[project.scripts]
smart-grid = "main:main"

[tool.setuptools]
py-modules = [
    "main",
    "integrated_smart_grid_pipeline",
    "smart_grid_data_generator", 
    "smart_grid_dashboard",
    "backtest_engine",
    "schema_validator",
    "simplified_config",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | data
  | models
  | outputs
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["smart_grid"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "catboost.*",
    "lightgbm.*", 
    "xgboost.*",
    "streamlit.*",
    "plotly.*",
    "numba.*",
    "schedule.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "setup.py", 
    "*/site-packages/*",
    "data/*",
    "models/*",
    "outputs/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]